
///166. Fraction to Recurring Decimal
typedef long long ll;
    string fractionToDecimal(int numerator, int denominator) {
        if(numerator==0){
            return "0"; ///base case
        }
        
        string res="";
        if((numerator<0) ^ (denominator<0)){
            res+="-";
        }

        ll n=llabs((ll)numerator);
        ll d=llabs((ll)denominator);

        res+=to_string(n/d);
        ll rem=n%d;
        if(rem==0){
            return res;
        }
        res+=".";

        unordered_map<ll,int> mp;
        while(rem!=0){
            if(mp.find(rem)!=mp.end()){
                res.insert(mp[rem],"(");
                res+=")";
                return res;
            }
            mp[rem]=res.size();

            rem*=10;
            res+=to_string(rem/d);
            rem%=d;
        }
        return res;
    }